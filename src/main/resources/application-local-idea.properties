spring.application.name=iam-service
server.servlet.context-path=/

server.port=8189

# JWT
jwt.secret=Hy4B7qddTMak32BdKRPUc2dTL4apyBSufPuFYQe4VBlKbIoGzNuBKdN7YLa97Bra3T8mVJrCCJoOCyZ+uk+FUg==
jwt.lifetime=3600000
jwt.expiration=103600000

# PostgreSQL
spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/post_hub_local
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.properties.hibernate.default_schema=v1_iam_service
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=v1_iam_service

# Endpoints
endpoint.posts=/posts
endpoint.id=/{id}
endpoint.search=/search
endpoint.users=/users
endpoint.auth=/auth
endpoint.login=/login
endpoint.refresh.token=/refresh/token
endpoint.register=/register
endpoint.comments=/comments
endpoint.logout=/logout
endpoint.password.reset=/password/reset

# Swagger
swagger.servers.first=http://localhost:8100
swagger.servers.second=http://localhost:8189
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

# Kafka
kafka.enabled=true
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=iam_service

additional.kafka.topic.iam.service.logs=iam_topic_for_demo

spring.kafka.listener.ack-mode=manual

spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.batch-size=50000
spring.kafka.retry.topic.enabled=true

# Actuator for health-check
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Consul
spring.cloud.consul.host=consul
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.health-check-path=/actuator/health
spring.cloud.consul.discovery.health-check-interval=10s
spring.cloud.consul.discovery.prefer-ip-address=true

# Logging Level
logging.level.com.post.hub.iamservice=TRACE
logging.level.org.springframework.web=DEBUG
logging.level.org.flywaydb=DEBUG
logging.level.org.springframework.cloud.consul=INFO
